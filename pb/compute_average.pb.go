// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/compute_average.proto

/*
Package cavgpb is a generated protocol buffer package.

It is generated from these files:
	pb/compute_average.proto

It has these top-level messages:
	ComputeAverageRequest
	ComputeAverageResponse
*/
package cavgpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ComputeAverageRequest struct {
	Num int32 `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
}

func (m *ComputeAverageRequest) Reset()                    { *m = ComputeAverageRequest{} }
func (m *ComputeAverageRequest) String() string            { return proto.CompactTextString(m) }
func (*ComputeAverageRequest) ProtoMessage()               {}
func (*ComputeAverageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ComputeAverageRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type ComputeAverageResponse struct {
	Result float32 `protobuf:"fixed32,1,opt,name=result" json:"result,omitempty"`
}

func (m *ComputeAverageResponse) Reset()                    { *m = ComputeAverageResponse{} }
func (m *ComputeAverageResponse) String() string            { return proto.CompactTextString(m) }
func (*ComputeAverageResponse) ProtoMessage()               {}
func (*ComputeAverageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ComputeAverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*ComputeAverageRequest)(nil), "compute_average.ComputeAverageRequest")
	proto.RegisterType((*ComputeAverageResponse)(nil), "compute_average.ComputeAverageResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ComputeAverageService service

type ComputeAverageServiceClient interface {
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputeAverageService_ComputeAverageClient, error)
}

type computeAverageServiceClient struct {
	cc *grpc.ClientConn
}

func NewComputeAverageServiceClient(cc *grpc.ClientConn) ComputeAverageServiceClient {
	return &computeAverageServiceClient{cc}
}

func (c *computeAverageServiceClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (ComputeAverageService_ComputeAverageClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ComputeAverageService_serviceDesc.Streams[0], c.cc, "/compute_average.ComputeAverageService/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &computeAverageServiceComputeAverageClient{stream}
	return x, nil
}

type ComputeAverageService_ComputeAverageClient interface {
	Send(*ComputeAverageRequest) error
	CloseAndRecv() (*ComputeAverageResponse, error)
	grpc.ClientStream
}

type computeAverageServiceComputeAverageClient struct {
	grpc.ClientStream
}

func (x *computeAverageServiceComputeAverageClient) Send(m *ComputeAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *computeAverageServiceComputeAverageClient) CloseAndRecv() (*ComputeAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ComputeAverageService service

type ComputeAverageServiceServer interface {
	ComputeAverage(ComputeAverageService_ComputeAverageServer) error
}

func RegisterComputeAverageServiceServer(s *grpc.Server, srv ComputeAverageServiceServer) {
	s.RegisterService(&_ComputeAverageService_serviceDesc, srv)
}

func _ComputeAverageService_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ComputeAverageServiceServer).ComputeAverage(&computeAverageServiceComputeAverageServer{stream})
}

type ComputeAverageService_ComputeAverageServer interface {
	SendAndClose(*ComputeAverageResponse) error
	Recv() (*ComputeAverageRequest, error)
	grpc.ServerStream
}

type computeAverageServiceComputeAverageServer struct {
	grpc.ServerStream
}

func (x *computeAverageServiceComputeAverageServer) SendAndClose(m *ComputeAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *computeAverageServiceComputeAverageServer) Recv() (*ComputeAverageRequest, error) {
	m := new(ComputeAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ComputeAverageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "compute_average.ComputeAverageService",
	HandlerType: (*ComputeAverageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ComputeAverage",
			Handler:       _ComputeAverageService_ComputeAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pb/compute_average.proto",
}

func init() { proto.RegisterFile("pb/compute_average.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x48, 0xd2, 0x4f,
	0xce, 0xcf, 0x2d, 0x28, 0x2d, 0x49, 0x8d, 0x4f, 0x2c, 0x4b, 0x2d, 0x4a, 0x4c, 0x4f, 0xd5, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x47, 0x13, 0x56, 0xd2, 0xe4, 0x12, 0x75, 0x86, 0x08, 0x39,
	0x42, 0x44, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0xf3, 0x4a, 0x73,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x40, 0x4c, 0x25, 0x03, 0x2e, 0x31, 0x74, 0xa5, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x62, 0x5c, 0x6c, 0x45, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x60,
	0xe5, 0x4c, 0x41, 0x50, 0x9e, 0x51, 0x1d, 0xba, 0xe1, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0xa9, 0x5c, 0x7c, 0xa8, 0x12, 0x42, 0x6a, 0x7a, 0xe8, 0x0e, 0xc6, 0xea, 0x2c, 0x29, 0x75,
	0x82, 0xea, 0x20, 0x6e, 0x52, 0x62, 0xd0, 0x60, 0x74, 0xe2, 0x88, 0x62, 0x4b, 0x4e, 0x2c, 0x4b,
	0x2f, 0x48, 0x4a, 0x62, 0x03, 0x7b, 0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x14, 0x99, 0x48,
	0x64, 0x1a, 0x01, 0x00, 0x00,
}
